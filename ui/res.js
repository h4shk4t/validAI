const res = [
  {
    text: 'this would be an expected output:\n\n```bash\nExecuting call to Phat Contract\nCall result:\n{\n  output: { ok: { ok: \'20950198739626844\' } },\n  debugMessage: \'\',\n  result: {\n    ok: { flags: [], data: \'0x0000443230393530313938373339363236383434\' }\n  },\n  gasConsumed: { refTime: 1342177279, proofSize: 0 },\n  gasRequired: { refTime: 65766686719, proofSize: 0 },\n  storageDeposit: { charge: 2047 }\n}\n```\n{% endtab %}\n\n{% tab title="Phat UI" %}\nGo to the [Phat UI](https://phat.phala.network) website where you will see a landing page.\n\n<figure><img src="../../../../.gitbook/assets/Phat-UI-landing-page.png" alt=""><figcaption><p>Phat UI Landing Page</p></figcaption></figure>\n\nNext, you will connect your Polkadot wallet ([Talisman](https://talisman.xyz/download), [SubWallet](https://chrome.google.com/webstore/detail/subwallet-polkadot-extens/onhogfjeacnfoofkfgppdlbmlmnplgbn?hl=en\\&authuser=0), or [Polkadot.js](https://chrome.google.com/webstore/detail/polkadot%7Bjs%7D-extension/mopnmbcafieddcagagdcbnhejhlodfdd/related))\n\n<figure><img src="../../../../.gitbook/assets/Select-Polkadot-Wallet.png" alt=""><figcaption><p>Select a Polkadot Wallet</p></figcaption></figure>\n\nFor more info on these steps, check out the [Phat Contract Console](https://phat.phala.network) section. Now that your account has PHA testnet tokens, upload the compile contract file `phat_hello.contract`\n\nHere is a video example of the process. After the contract is deployed and instantiated into a cluster, choose any ETH address and query the balance.',
    file_path: "./phala_dist/deploy-contract.md",
  },
  {
    text: "md)\n  * [PRBv2 Deployment Guide](compute-providers/run-workers-on-khala/deployment-guide-for-prbv2.md)\n  * [PRB Worker Deployment](compute-providers/run-workers-on-khala/prb-worker-deployment.md)\n  * [How to switch from Solo scripts to PRB worker](compute-providers/run-workers-on-khala/how-to-switch-from-solo-mining-to-prb-mining.md)\n  * [Khala Worker Rewards](compute-providers/run-workers-on-khala/khala-worker-rewards.md)\n  * [Troubleshooting](compute-providers/run-workers-on-khala/troubleshooting.md)\n* [üõ°Ô∏è Gatekeeper](compute-providers/gatekeeper/README.md)\n  * [Collator](compute-providers/gatekeeper/collator.md)\n  * [Gatekeeper](compute-providers/gatekeeper/gatekeeper.md)\n\n## Web Directory\n\n* [Discord](https://discord.gg/phala-network)\n* [GitHub](https://github.com/Phala-Network/)\n* [Twitter](https://twitter.com/PhalaNetwork)\n* [YouTube](https://www.youtube.com/@PhalaNetwork)\n* [Forum](https://forum.phala.network/)\n* [Medium](https://medium.com/phala-network)\n\n***\n\n* [Telegram](https://t.me/phalanetwork)",
    file_path: "./phala_dist/SUMMARY.md",
  },
  {
    text: 'To learn more about AI Agent Contract: [getting-started](../ai-agent-contract/getting-started/ "mention")\n\nTo learn more about launching agents with tokenomics: [agent-wars-introduction.md](../agent-wars/agent-wars-introduction.md "mention")',
    file_path: "./phala_dist/phala-network.md",
  },
  {
    text: '# Cluster of Workers\n\n## Cluster: Abstraction of Workers <a href="#cluster-abstraction-of-workers" id="cluster-abstraction-of-workers"></a>\n\nPhala has many Workers but we do not expose them to developers directly. They are organized into _Clusters_ and used by our developers.\n\n![](https://i.imgur.com/G4T51Ht.png)\n\n* Contracts must be deployed to a Cluster, and a Cluster can hold multiple contracts\n  * Contracts in different Clusters have no relationship, even if they share the same code\n  * Contracts in one Cluster can call each other, and contracts in different Clusters need to call each other in an XCM-like way (BTW, the XCM support is WIP, so this should be supported soon)\n* A Cluster is backed by one or more Workers\n  * The Worker will run all the contracts in this Cluster\n* Different access controls can be defined for different Clusters\n  * like who can deploy how many contracts in this Cluster\n\nAccordingly, we have a two-level contract tokenomics for this design.\n\n* The L1 tokenomics define how you stake $PHA to rent Workers and form your Cluster\n  * We will provide the public good Clusters, and people can stake $PHA to get the proportional computing power in our network\n* The L2 tokenomics define how Cluster owners charge the contract deployers\n  * We provide a [template implementation](https://github.com/Phala-Network/phala-blockchain/tree/master/crates/pink-drivers) (with `Public` and `OnlyOwner` rules) and will allow owners to implement their own logic with Phat Contract',
    file_path: "./phala_dist/cluster-of-workers.md",
  },
  {
    text: '```bash\nnpx @phala/fn run dist/index.js -a 0x0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000964256674e42d61f0ff84097e28f65311786ccb000000000000000000000000eaf55242a90bb3289db8184772b0b98562053559 \'{"apiUrl": "https://api.airstack.xyz/gql", "apiKey": "3a41775a358a4cb99ca9a29c1f6fc486"}\' \n\nhandle req: 0x0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000964256674e42d61f0ff84097e28f65311786ccb000000000000000000000000eaf55242a90bb3289db8184772b0b98562053559\n[1]: 0x964256674E42D61f0fF84097E28f65311786ccB0 0xeaf55242a90bb3289dB8184772b0B98562053559\nRequest received for profile 0x964256674E42D61f0fF84097E28f65311786ccB0 0xeaf55242a90bb3289dB8184772b0B98562053559\nTokens Sent on ETH Check... Result [0]\nTokens Sent on ETH Check... Result [0]\nLens Profile Check... Result [7]\nFarcaster Account Check... Result [14]\nPrimary ENS Account.',
    file_path:
      "./phala_dist/connect-airstack-phat-contract-to-evm-consumer-contract.md",
  },
];
